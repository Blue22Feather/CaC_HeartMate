{"ast":null,"code":"var _jsxFileName = \"/ufs/walther22wolff/Workspace - Programming/0. Web Applications - Repok/1. NodeJS_React - Repok/heartmate_page/src/components/app_screen_panels/explore_panel.jsx\",\n  _s = $RefreshSig$();\n/*----- Importaciones y dependencias -----*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../scripts/app_context';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport { request_all_userData } from '../../scripts/server_com';\n\n/*----- Recursos multimedia -----*/\nimport default_bg from '../../imgs/loading_background.jpg';\nimport svg_icons from '../../icons/svg-resources.xml';\n\n/*----- Componentes locales -----*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCard = ({\n  input_userData,\n  input_host\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-card__wrapper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n/*----- Componente central -----*/\n_c = UserCard;\nexport const ExplorePanel = () => {\n  _s();\n  const {\n    auth,\n    userData\n  } = useContext(AppContext);\n  const [allUsers, setAllUsers] = useState(null);\n  let serverHost = 'http://localhost:5000'; /*window.location.host <-- para cuando el servidor este montado*/\n\n  useEffect(() => {\n    if (auth) {\n      if (!allUsers) {\n        request_all_userData(auth, (error, result) => {\n          if (error) {\n            console.log(error);\n          } else {\n            setAllUsers(result);\n          }\n        });\n      } else {\n        console.log(allUsers);\n      }\n    } else {\n      console.warn(\"aun no carga el auth\");\n    }\n  }, [auth, allUsers, setAllUsers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"explore__content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ExplorePanel, \"OxsErRK83TBTll1btgbQ1dDj+lw=\");\n_c2 = ExplorePanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserCard\");\n$RefreshReg$(_c2, \"ExplorePanel\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AppContext","Routes","Route","Link","request_all_userData","default_bg","svg_icons","jsxDEV","_jsxDEV","UserCard","input_userData","input_host","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","ExplorePanel","_s","auth","userData","allUsers","setAllUsers","serverHost","error","result","console","log","warn","children","_c2","$RefreshReg$"],"sources":["/ufs/walther22wolff/Workspace - Programming/0. Web Applications - Repok/1. NodeJS_React - Repok/heartmate_page/src/components/app_screen_panels/explore_panel.jsx"],"sourcesContent":["/*----- Importaciones y dependencias -----*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../scripts/app_context';\nimport { Routes, Route, Link } from 'react-router-dom';\n\nimport { request_all_userData } from '../../scripts/server_com';\n\n/*----- Recursos multimedia -----*/\nimport default_bg from '../../imgs/loading_background.jpg';\nimport svg_icons from '../../icons/svg-resources.xml';\n\n/*----- Componentes locales -----*/\nconst UserCard = ({input_userData, input_host}) => {\n    return (\n        <div className='user-card__wrapper'>\n\n        </div>\n    );\n}\n\n/*----- Componente central -----*/\nexport const ExplorePanel = () => {\n    const { auth, userData } = useContext(AppContext);\n    const [ allUsers, setAllUsers ] = useState(null);\n\n    let serverHost = 'http://localhost:5000'; /*window.location.host <-- para cuando el servidor este montado*/\n\n    useEffect(() => {\n        if (auth) {\n            if (!allUsers) {\n                request_all_userData(auth, (error, result) => {\n                    if (error) {\n                        console.log(error)\n                    } else {\n                        setAllUsers(result)\n                    }\n                });\n            } else {\n                console.log(allUsers)\n            }\n        } else {\n            console.warn(\"aun no carga el auth\");\n        }\n    }, [auth, allUsers, setAllUsers]);\n\n    return(\n        <div className='screen__wrapper'>\n            <div className='explore__content'>\n                \n            </div>\n        </div>\n    );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,SAASC,oBAAoB,QAAQ,0BAA0B;;AAE/D;AACA,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,OAAOC,SAAS,MAAM,+BAA+B;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAACC,cAAc;EAAEC;AAAU,CAAC,KAAK;EAC/C,oBACIH,OAAA;IAAKI,SAAS,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEd,CAAC;;AAED;AAAAC,EAAA,GARMR,QAAQ;AASd,OAAO,MAAMS,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGxB,UAAU,CAACG,UAAU,CAAC;EACjD,MAAM,CAAEsB,QAAQ,EAAEC,WAAW,CAAE,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAEhD,IAAIyB,UAAU,GAAG,uBAAuB,CAAC,CAAC;;EAE1C1B,SAAS,CAAC,MAAM;IACZ,IAAIsB,IAAI,EAAE;MACN,IAAI,CAACE,QAAQ,EAAE;QACXlB,oBAAoB,CAACgB,IAAI,EAAE,CAACK,KAAK,EAAEC,MAAM,KAAK;UAC1C,IAAID,KAAK,EAAE;YACPE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UACtB,CAAC,MAAM;YACHF,WAAW,CAACG,MAAM,CAAC;UACvB;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACzB;IACJ,CAAC,MAAM;MACHK,OAAO,CAACE,IAAI,CAAC,sBAAsB,CAAC;IACxC;EACJ,CAAC,EAAE,CAACT,IAAI,EAAEE,QAAQ,EAAEC,WAAW,CAAC,CAAC;EAEjC,oBACIf,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAkB,QAAA,eAC5BtB,OAAA;MAAKI,SAAS,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAG,EAAA,CA/BYD,YAAY;AAAAa,GAAA,GAAZb,YAAY;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}